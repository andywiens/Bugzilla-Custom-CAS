use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1297790525',
        'name' => 'bug/create/create.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 27 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
#line 29 "template/en/default/bug/create/create.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Enter ";
#line 29 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  ": ";
#line 29 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n";
#line 31 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'yui' => [ 'autocomplete', 'calendar', 'datatable' ], 'style_urls' => [ 'skins/standard/attachment.css', 'skins/standard/enter_bug.css' ], 'javascript_urls' => [ 'js/attachment.js', 'js/util.js', 'js/field.js', 'js/TUI.js', 'js/bug.js' ], 'onload' => 'set_assign_to();' });
    $output .=  "\n\n<script type=\"text/javascript\">\n<!--\n\nvar initialowners = new Array(";
#line 44 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['product', 0, 'components', 0, 'size', 0]);
    $output .=  ");\nvar last_initialowner;\nvar initialccs = new Array(";
#line 46 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['product', 0, 'components', 0, 'size', 0]);
    $output .=  ");\nvar components = new Array(";
#line 47 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['product', 0, 'components', 0, 'size', 0]);
    $output .=  ");\nvar comp_desc = new Array(";
#line 48 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['product', 0, 'components', 0, 'size', 0]);
    $output .=  ");\nvar flags = new Array(";
#line 49 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['product', 0, 'components', 0, 'size', 0]);
    $output .=  ");";
#line 53 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n    var initialqacontacts = new Array(";
#line 51 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['product', 0, 'components', 0, 'size', 0]);
    $output .=  ");\n    var last_initialqacontact;";
    }
    
#line 54 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('count', 0);
#line 80 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'components', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'c'} = $_tt_value;
    $output .=  "\n    components[";
#line 56 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get('count');
    $output .=  "] = \"";
#line 56 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\";\n    comp_desc[";
#line 57 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get('count');
    $output .=  "] = \"";
#line 57 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\";\n    initialowners[";
#line 58 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get('count');
    $output .=  "] = \"";
#line 58 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'default_assignee', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\";";
#line 59 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('flag_list', [ ]);
#line 63 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['c', 0, 'flag_types', 0, 'bug', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'f'} = $_tt_value;
#line 61 "template/en/default/bug/create/create.html.tmpl"
    if (!($stash->get(['f', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR2;
    
    }
    
#line 62 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['flag_list', 0, 'push', [ $stash->get(['f', 0, 'id', 0]) ]]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 67 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['c', 0, 'flag_types', 0, 'attachment', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'f'} = $_tt_value;
#line 65 "template/en/default/bug/create/create.html.tmpl"
    if (!($stash->get(['f', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR2;
    
    }
    
#line 66 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['flag_list', 0, 'push', [ $stash->get(['f', 0, 'id', 0]) ]]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    flags[";
#line 68 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get('count');
    $output .=  "] = [";
#line 68 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_list', 0, 'join', [ ',' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "];";
#line 71 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n        initialqacontacts[";
#line 70 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get('count');
    $output .=  "] = \"";
#line 70 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'default_qa_contact', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\";";
    }
    
    $output .=  "\n";
#line 73 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('initial_cc_list', [ ]);
#line 76 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['c', 0, 'initial_cc', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'cc_user'} = $_tt_value;
#line 75 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['initial_cc_list', 0, 'push', [ $stash->get(['cc_user', 0, 'login', 0]) ]]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    initialccs[";
#line 77 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get('count');
    $output .=  "] = \"";
#line 77 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['initial_cc_list', 0, 'join', [ ', ' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\";\n";
#line 79 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('count', $stash->get('count') + 1);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\nfunction set_assign_to() {\n    // Based on the selected component, fill the \"Assign To:\" field\n    // with the default component owner, and the \"QA Contact:\" field\n    // with the default QA Contact. It also selectively enables flags.\n    var form = document.Create;\n    var assigned_to = form.assigned_to.value;\n";
#line 91 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n    var qa_contact = form.qa_contact.value;";
    }
    
    $output .=  "\n\n    var index = -1;\n    if (form.component.type == 'select-one') {\n        index = form.component.selectedIndex;\n    } else if (form.component.type == 'hidden') {\n        // Assume there is only one component in the list\n        index = 0;\n    }\n    if (index != -1) {\n        var owner = initialowners[index];\n        var component = components[index];\n        if (assigned_to == last_initialowner\n            || assigned_to == owner\n            || assigned_to == '') {\n            form.assigned_to.value = owner;\n            last_initialowner = owner;\n        }\n\n        document.getElementById('initial_cc').innerHTML = initialccs[index];\n        document.getElementById('comp_desc').innerHTML = comp_desc[index];\n";
#line 121 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n            var contact = initialqacontacts[index];\n            if (qa_contact == last_initialqacontact\n                || qa_contact == contact\n                || qa_contact == '') {\n                  form.qa_contact.value = contact;\n                  last_initialqacontact = contact;\n            }";
    }
    
    $output .=  "\n\n        // First, we disable all flags. Then we re-enable those\n        // which are available for the selected component.\n        var inputElements = document.getElementsByTagName(\"select\");\n        var inputElement, flagField;\n        for ( var i=0 ; i<inputElements.length ; i++ ) {\n            inputElement = inputElements.item(i);\n            if (inputElement.name.search(/^flag_type-(\\d+)\$/) != -1) {\n                var id = inputElement.name.replace(/^flag_type-(\\d+)\$/, \"\$1\");\n                inputElement.disabled = true;\n                // Also hide the requestee field, if it exists.\n                inputElement = document.getElementById(\"requestee_type-\" + id);\n                if (inputElement)\n                  YAHOO.util.Dom.addClass(inputElement.parentNode, 'bz_default_hidden');\n            }\n        }\n        // Now enable flags available for the selected component.\n        for (var i = 0; i < flags[index].length; i++) {\n            flagField = document.getElementById(\"flag_type-\" + flags[index][i]);\n            // Do not enable flags the user cannot set nor request.\n            if (flagField && flagField.options.length > 1) {\n                flagField.disabled = false;\n                // Re-enabling the requestee field depends on the status\n                // of the flag.\n                toggleRequesteeField(flagField, 1);\n            }\n        }\n    }\n}\n\nfunction handleWantsAttachment(wants_attachment) {\n    if (wants_attachment) {\n        document.getElementById('attachment_false').style.display = 'none';\n        document.getElementById('attachment_true').style.display = 'block';\n    }\n    else {\n        document.getElementById('attachment_false').style.display = 'block';\n        document.getElementById('attachment_true').style.display = 'none';\n        clearAttachmentFields();\n    }\n}\n\nvar status_comment_required = new Array();";
#line 168 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('bug_status');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
    $output .=  "\n  status_comment_required['";
#line 166 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'] = ";
#line 167 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['status', 0, 'comment_required_on_change_from', 0]) ? 'true' : 'false';;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\nTUI_alternates['expert_fields'] = 'Show Advanced Fields';\n// Hide the Advanced Fields by default, unless the user has a cookie\n// that specifies otherwise.\nTUI_hide_default('expert_fields');\n\n-->\n</script>\n\n<form name=\"Create\" id=\"Create\" method=\"post\" action=\"post_bug.cgi\"\n      class=\"enter_bug_form\" enctype=\"multipart/form-data\"\n      onsubmit=\"return validateEnterBug(this)\">\n<input type=\"hidden\" name=\"product\" value=\"";
#line 181 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n<input type=\"hidden\" name=\"token\" value=\"";
#line 182 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('token');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n\n<table>\n<tbody>\n  <tr>\n    <td colspan=\"4\">\n    ";
#line 191 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->process('bug/create/user-message.html.tmpl');
    $output .=  "\n    </td>\n  </tr>\n\n  <tr>\n    <td colspan=\"2\">\n      <a id=\"expert_fields_controller\" class=\"controller bz_default_hidden\"\n         href=\"javascript:TUI_toggle_class('expert_fields')\">Hide\n        Advanced Fields</a>\n      ";
    $output .=  "\n      <script type=\"text/javascript\">\n        YAHOO.util.Dom.removeClass('expert_fields_controller', \n                                   'bz_default_hidden');\n      </script>\n    </td>\n    <td colspan=\"2\">\n      (<span class=\"required_star\">*</span> =\n      <span class=\"required_explanation\">Required Field</span>)\n   </td>\n  </tr>\n\n  <tr>";
#line 213 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'product', 0]), 'editable' => 0, 'value' => $stash->get(['product', 0, 'name', 0]) });
#line 216 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'reporter', 0]), 'editable' => 0, 'value' => $stash->get(['user', 0, 'login', 0]) });
    $output .=  "\n  </tr>\n\n  ";
    $output .=  "\n  <tr>";
#line 225 "template/en/default/bug/create/create.html.tmpl"
    
    # CAPTURE
    $stash->set('component_desc_url', do {
        my $output = '';
    $output .=  "      describecomponents.cgi?product=";
#line 224 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 226 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'component', 0]), 'editable' => 1, 'desc_url' => $stash->get('component_desc_url') });
    $output .=  "      \n    <td id=\"field_container_component\">\n      <select name=\"component\" id=\"component\" onchange=\"set_assign_to();\"\n              size=\"7\" aria-required=\"true\" class=\"required\">\n        ";
#line 237 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 235 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('assignees_list', $stash->get(['user', 0, 'get_userlist', 0, 'clone', 0]));
#line 236 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('qa_contacts_list', $stash->get(['user', 0, 'get_userlist', 0, 'clone', 0]));
    }
    
    $output .=  "\n";
#line 256 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'components', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'c'} = $_tt_value;
    $output .=  "\n          <option value=\"";
#line 240 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                  id=\"v";
#line 241 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "_component\"";
#line 247 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['c', 0, 'name', 0]) eq $stash->get(['default', 0, 'component_', 0])) {
    $output .=  "\n              ";
#line 245 "template/en/default/bug/create/create.html.tmpl"
    $stash->set(['default', 0, 'component_id', 0], $stash->get(['c', 0, 'id', 0]));
    $output .=  "\n              selected=\"selected\"";
    }
    
    $output .=  ">";
#line 248 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['c', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "          </option>";
#line 255 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 251 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('build_userlist', { 'default_user' => $stash->get(['c', 0, 'default_assignee', 0]), 'userlist' => $stash->get('assignees_list') });
#line 253 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('build_userlist', { 'default_user' => $stash->get(['c', 0, 'default_qa_contact', 0]), 'userlist' => $stash->get('qa_contacts_list') });
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </select>\n\n      <script type=\"text/javascript\">\n       <!--\n         ";
#line 261 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-events.js.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'component', 0]) });
    $output .=  "\n       //-->\n       </script>\n    </td>\n\n    <td colspan=\"2\" id=\"comp_desc_container\">\n      ";
    $output .=  "\n      <table>\n        <tr>\n          <td>\n            <fieldset>\n              <legend>Component Description</legend>\n              <div id=\"comp_desc\" class=\"comment\">Select a component to read its description.</div>\n            </fieldset>\n          </td>\n        </tr>\n      </table>\n    </td>\n  </tr>\n\n  <tr>";
#line 284 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'version', 0]), 'editable' => 1, 'rowspan' => 3 });
    $output .=  "\n    <td rowspan=\"3\">\n      <select name=\"version\" id=\"version\" size=\"5\">";
#line 293 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('version');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'v'} = $_tt_value;
    $output .=  "\n          <option value=\"";
#line 290 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('v');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 291 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get('v') eq $stash->get(['default', 0, 'version', 0])) {
    $output .=  ' selected="selected"';
    }
    
    $output .=  ">";
#line 291 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('v');
        
        &$_tt_filter($output);
    };
    
    $output .=  "          </option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </select>\n    </td>\n";
#line 297 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'bug_severity', 0]), 'editable' => 1, 'value' => $stash->get(['default', 0, 'bug_severity', 0]) });
    $output .=  "\n  </tr>\n\n  <tr>";
#line 303 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'rep_platform', 0]), 'editable' => 1, 'value' => $stash->get(['default', 0, 'rep_platform', 0]) });
    $output .=  "\n  </tr>\n\n  <tr>";
#line 309 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'op_sys', 0]), 'editable' => 1, 'value' => $stash->get(['default', 0, 'op_sys', 0]) });
    $output .=  "\n  </tr>";
#line 328 "template/en/default/bug/create/create.html.tmpl"
    if (! $stash->get(['Param', [ 'defaultplatform' ]]) || ! $stash->get(['Param', [ 'defaultopsys' ]])) {
    $output .=  "\n    <tr>\n      <th colspan=\"3\">&nbsp;</th>\n      <td id=\"os_guess_note\" class=\"comment\">\n        <div>We've made a guess at your";
#line 324 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'defaultplatform' ]])) {
    $output .=  "\n          operating system. Please check it";
    }
    elsif ($stash->get(['Param', [ 'defaultopsys' ]])) {
    $output .=  "\n          platform. Please check it";
    }
    else {
    $output .=  "\n          operating system and platform. Please check them";
    }
    
    $output .=  "\n        and make any corrections if necessary.</div>\n      </td>\n    </tr>";
    }
    
    $output .=  "\n</tbody>\n\n<tbody class=\"expert_fields\">\n  <tr>";
#line 337 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]]) && $stash->get(['Param', [ 'letsubmitterchoosemilestone' ]])) {
#line 334 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('select', { 'field' => $stash->get(['bug_fields', 0, 'target_milestone', 0]) });
    }
    else {
    $output .=  "\n      <td colspan=\"2\">&nbsp;</td>";
    }
    
    $output .=  "\n";
#line 345 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'letsubmitterchoosepriority' ]])) {
#line 340 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'priority', 0]), 'editable' => 1, 'value' => $stash->get(['default', 0, 'priority', 0]) });
    }
    else {
    $output .=  "\n      <td colspan=\"2\">&nbsp;</td>";
    }
    
    $output .=  "\n  </tr>\n</tbody>\n\n<tbody class=\"expert_fields\">\n  <tr>\n    <td colspan=\"4\">&nbsp;</td>\n  </tr>\n\n  <tr>";
#line 355 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'bug_status', 0]), 'editable' => ($stash->get(['bug_status', 0, 'size', 0]) > 1), 'value' => $stash->get(['default', 0, 'bug_status', 0]), 'override_legal_values' => $stash->get('bug_status') });
    $output .=  "\n\n    <td>&nbsp;</td>\n    ";
#line 362 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('num_rows', 6 + ($stash->get(['Param', [ 'useqacontact' ]]) ? 1 : 0) + ($stash->get(['user', 0, 'is_timetracker', 0]) ? 3 : 0) + ($stash->get(['Param', [ 'usebugaliases' ]]) ? 1 : 0));
    $output .=  "\n\n    <td rowspan=\"";
#line 367 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num_rows');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 384 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['product', 0, 'flag_types', 0, 'bug', 0, 'size', 0]) > 0) {
#line 369 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('display_flag_headers', 0);
#line 370 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('any_flags_requesteeble', 0);
    $output .=  "\n";
#line 376 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'flag_types', 0, 'bug', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'flag_type'} = $_tt_value;
#line 373 "template/en/default/bug/create/create.html.tmpl"
    if (!($stash->get(['flag_type', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 374 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('display_flag_headers', 1);
#line 375 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['flag_type', 0, 'is_requestable', 0]) && $stash->get(['flag_type', 0, 'is_requesteeble', 0])) {
    $stash->set('any_flags_requesteeble', 1);
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
#line 383 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get('display_flag_headers')) {
#line 379 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->process('flag/list.html.tmpl', { 'flag_types' => $stash->get(['product', 0, 'flag_types', 0, 'bug', 0]), 'any_flags_requesteeble' => $stash->get('any_flags_requesteeble'), 'flag_table_id' => 'bug_flags' });
    }
    
    }
    
    $output .=  "\n    </td>\n  </tr>\n\n  <tr>";
#line 389 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'assigned_to', 0]), 'editable' => 1 });
    $output .=  "\n    <td colspan=\"2\">";
#line 393 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'assigned_to', 'name' => 'assigned_to', 'value' => $stash->get('assigned_to'), 'disabled' => $stash->get('assigned_to_disabled'), 'size' => 30, 'emptyok' => 1, 'custom_userlist' => $stash->get('assignees_list') });
    $output .=  "\n      <noscript>(Leave blank to assign to component's default assignee)</noscript>\n    </td>\n  </tr>\n  ";
#line 424 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'useqacontact' ]])) {
    $output .=  "\n    <tr>";
#line 408 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'qa_contact', 0]), 'editable' => 1 });
    $output .=  "\n      <td colspan=\"2\">";
#line 412 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'qa_contact', 'name' => 'qa_contact', 'value' => $stash->get('qa_contact'), 'disabled' => $stash->get('qa_contact_disabled'), 'size' => 30, 'emptyok' => 1, 'custom_userlist' => $stash->get('qa_contacts_list') });
    $output .=  "\n        <noscript>(Leave blank to assign to default qa contact)</noscript>\n      </td>\n    </tr>";
    }
    
    $output .=  "\n\n  <tr>";
#line 427 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'cc', 0]), 'editable' => 1 });
    $output .=  "\n    <td colspan=\"2\">";
#line 431 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'cc', 'name' => 'cc', 'value' => $stash->get('cc'), 'disabled' => $stash->get('cc_disabled'), 'size' => 30, 'multiple' => 5 });
    $output .=  "\n    </td>\n  </tr>\n\n  <tr>\n    <th>Default ";
#line 443 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, 'cc', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ":</th>\n    <td colspan=\"2\">\n      <div id=\"initial_cc\">\n      </div>\n   </td>\n  </tr>\n  \n  <tr>\n    <td colspan=\"3\">&nbsp;</td>\n  </tr>\n";
#line 472 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['user', 0, 'is_timetracker', 0])) {
    $output .=  "\n  <tr>";
#line 456 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'estimated_time', 0]), 'editable' => 1 });
    $output .=  "\n    <td colspan=\"2\">\n      <input name=\"estimated_time\" size=\"6\" maxlength=\"6\" value=\"";
#line 460 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('estimated_time');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    </td>\n  </tr>\n  <tr>";
#line 464 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'deadline', 0]), 'value' => $stash->get('deadline'), 'editable' => 1, 'value_span' => 2 });
    $output .=  " \n  </tr>\n\n  <tr>\n    <td colspan=\"3\">&nbsp;</td>\n  </tr>";
    }
    
    $output .=  "\n";
#line 483 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'usebugaliases' ]])) {
    $output .=  "\n  <tr>";
#line 476 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'alias', 0]), 'editable' => 1 });
    $output .=  "\n    <td colspan=\"2\">\n      <input name=\"alias\" size=\"20\" value=\"";
#line 480 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    </td>\n  </tr>";
    }
    
    $output .=  "\n\n  <tr>";
#line 486 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'bug_file_loc', 0]), 'editable' => 1 });
    $output .=  "\n    <td colspan=\"2\" class=\"field_value\">\n      <input name=\"bug_file_loc\" id=\"bug_file_loc\" class=\"text_input\"\n             size=\"40\" value=\"";
#line 491 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_file_loc');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    </td>\n  </tr>\n</tbody>\n\n<tbody>";
#line 497 "template/en/default/bug/create/create.html.tmpl"
    # USE
    $stash->set('Bugzilla',
                $context->plugin('Bugzilla'));
    $output .=  "\n";
#line 507 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['Bugzilla', 0, 'active_custom_fields', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'field'} = $_tt_value;
#line 500 "template/en/default/bug/create/create.html.tmpl"
    if (!($stash->get(['field', 0, 'enter_bug', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 501 "template/en/default/bug/create/create.html.tmpl"
    $stash->set('value', $stash->get([$stash->get(['field', 0, 'name', 0]), 0, 'defined', 0]) ? $stash->get($stash->get(['field', 0, 'name', 0])) : '');
    $output .=  "\n    <tr ";
#line 502 "template/en/default/bug/create/create.html.tmpl"
    if (! $stash->get(['field', 0, 'is_mandatory', 0])) {
    $output .=  'class="expert_fields"';
    }
    
    $output .=  ">";
#line 503 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get('field'), 'value' => $stash->get('value'), 'editable' => 1, 'value_span' => 3 });
    $output .=  "\n    </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</tbody>\n\n<tbody>\n\n  <tr>";
#line 513 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'short_desc', 0]), 'editable' => 1 });
    $output .=  "\n    <td colspan=\"3\" class=\"field_value\">\n      <input name=\"short_desc\" size=\"70\" value=\"";
#line 517 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('short_desc');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n             maxlength=\"255\" spellcheck=\"true\" aria-required=\"true\"\n             class=\"required text_input\" id=\"short_desc\">\n    </td>\n  </tr>\n";
#line 556 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['feature_enabled', [ 'jsonrpc' ]]) && ! $stash->get('cloned_bug_id')) {
    $output .=  "\n    <tr id=\"possible_duplicates_container\" class=\"bz_default_hidden\">\n      <th>Possible<br>Duplicates:</th>\n      <td colspan=\"3\">\n        <div id=\"possible_duplicates\"></div>\n        <script type=\"text/javascript\">\n          var dt_columns = [ \n              { key: \"id\", label: \"";
#line 530 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, 'bug_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\",\n                formatter: YAHOO.bugzilla.dupTable.formatBugLink },\n              { key: \"summary\", \n                label: \"";
#line 533 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, 'short_desc', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\",\n                formatter: \"text\" },\n              { key: \"status\",\n                label: \"";
#line 536 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\",\n                formatter: YAHOO.bugzilla.dupTable.formatStatus },\n              { key: \"update_token\", label: '',\n                formatter: YAHOO.bugzilla.dupTable.formatCcButton }\n          ];\n          YAHOO.bugzilla.dupTable.addCcMessage = \"Add Me to the CC List\";\n          YAHOO.bugzilla.dupTable.init({\n            container: 'possible_duplicates',\n            columns: dt_columns,\n            product_name: '";
#line 545 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n            summary_field: 'short_desc',\n            options: {\n              MSG_LOADING: 'Searching for possible duplicates...',\n              MSG_EMPTY:   'No possible duplicates found.',\n              SUMMARY:     'Possible Duplicates'\n            }\n          });\n        </script>\n      </td>\n    </tr>";
    }
    
    $output .=  "\n\n  <tr>\n    <th>Description:</th>\n    <td colspan=\"3\">\n";
#line 571 "template/en/default/bug/create/create.html.tmpl"
    
    # CAPTURE
    $stash->set('defaultcontent', do {
        my $output = '';
#line 567 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get('cloned_bug_id')) {
    $output .=  "\n+++ This ";
#line 564 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " was initially created as a clone of ";
#line 564 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " #";
#line 564 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get('cloned_bug_id');
    $output .=  " +++\n\n";
    }
    
    
#line 570 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('comment');
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 572 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('global/textarea.html.tmpl', { 'name' => 'comment', 'id' => 'comment', 'minrows' => 10, 'maxrows' => 25, 'cols' => '80', 'defaultcontent' => $stash->get('defaultcontent') });
    $output .=  "\n      <br>\n    </td>\n  </tr>\n";
#line 598 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['user', 0, 'is_insider', 0])) {
    $output .=  "\n    <tr class=\"expert_fields\">\n      <th>&nbsp;</th>\n      <td colspan=\"3\">\n        &nbsp;&nbsp;\n        <input type=\"checkbox\" id=\"comment_is_private\" name=\"comment_is_private\"";
#line 590 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get('comment_is_private')) {
    $output .=  ' checked="checked"';
    }
    
    $output .=  "\n               onClick=\"updateCommentTagControl(this, 'comment')\">\n        <label for=\"comment_is_private\">\n          Make description and any new attachment private (visible only to members \n          of the <strong>";
#line 594 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'insidergroup' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</strong> group)\n        </label>\n      </td>\n    </tr>";
    }
    
    $output .=  "\n";
#line 635 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['Param', [ 'maxattachmentsize' ]])) {
    $output .=  "\n  <tr>\n    <th>Attachment:</th>\n    <td colspan=\"3\">\n      <script type=\"text/javascript\">\n        <!--\n        document.write( '<div id=\"attachment_false\">'\n                      +   '<input type=\"button\" value=\"Add an attachment\" '\n                      +          'onClick=\"handleWantsAttachment(true)\"> '\n                      +   '<em style=\"display: none\">This button has no '\n                      +   'functionality for you because your browser does '\n                      +   'not support CSS or does not use it.<\\/em>'\n                      + '<\\/div>'\n                      + '<div id=\"attachment_true\" style=\"display: none\">'\n                      +   '<input type=\"button\" '\n                      +          'value=\"Don\\'t add an attachment \" '\n                      +          'onClick=\"handleWantsAttachment(false)\">');\n        //-->\n      </script>\n        <fieldset>\n          <legend>Add an attachment</legend>\n          <table class=\"attachment_entry\">";
#line 622 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->process('attachment/createformcontents.html.tmpl', { 'flag_types' => $stash->get(['product', 0, 'flag_types', 0, 'attachment', 0]), 'any_flags_requesteeble' => 1, 'flag_table_id' => 'attachment_flags' });
    $output .=  "\n          </table>\n        </fieldset>\n      <script type=\"text/javascript\">\n        <!--\n        document.write('<\\/div>');\n        //-->\n      </script>\n    </td>\n  </tr>";
    }
    
    $output .=  "\n</tbody>\n\n<tbody class=\"expert_fields\">";
#line 666 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'editbugs', $stash->get(['product', 0, 'id', 0]) ]])) {
#line 648 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get('use_keywords')) {
    $output .=  "\n      <tr>";
#line 642 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('default'), 'field' => $stash->get(['bug_fields', 0, 'keywords', 0]), 'editable' => 1, 'value' => $stash->get('keywords'), 'desc_url' => 'describekeywords.cgi', 'value_span' => 2 });
    $output .=  "\n      </tr>";
    }
    
    $output .=  "\n\n    <tr>";
#line 651 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'dependson', 0]), 'editable' => 1 });
    $output .=  "\n      <td colspan=\"3\">\n        <input name=\"dependson\" accesskey=\"d\" value=\"";
#line 655 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dependson');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n      </td>\n    </tr>\n    <tr>";
#line 659 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'blocked', 0]), 'editable' => 1 });
    $output .=  "\n      <td colspan=\"3\">\n        <input name=\"blocked\" accesskey=\"b\" value=\"";
#line 663 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('blocked');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n      </td>\n    </tr>";
    }
    
    $output .=  "\n</tbody>\n\n<tbody class=\"expert_fields\">";
#line 697 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['product', 0, 'groups_available', 0, 'size', 0])) {
    $output .=  "\n  <tr>\n    <th>&nbsp;</th>\n    <td colspan=\"3\">\n      <br>\n        <strong>\n          Only users in all of the selected groups can view this \n          ";
#line 677 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ":\n        </strong>\n      <br>\n      <font size=\"-1\">\n        (Leave all boxes unchecked to make this a public ";
#line 681 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".)\n      </font>\n      <br>\n      <br>\n\n      <!-- Checkboxes -->";
#line 694 "template/en/default/bug/create/create.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'groups_available', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'group'} = $_tt_value;
    $output .=  "\n        <input type=\"checkbox\" id=\"group_";
#line 688 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n               name=\"groups\" value=\"";
#line 689 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
#line 690 "template/en/default/bug/create/create.html.tmpl"
    if ($stash->get(['default', 0, 'groups', 0, 'contains', [ $stash->get(['group', 0, 'name', 0]) ]]) || $stash->get(['group', 0, 'is_default', 0])) {
    $output .=  ' checked="checked"';
    }
    
    $output .=  ">\n        <label for=\"group_";
#line 692 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 693 "template/en/default/bug/create/create.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html_light')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['group', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</label><br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </td>\n  </tr>";
    }
    
    $output .=  "\n</tbody>\n\n<tbody>\n  ";
#line 702 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'form' ]]);
    $output .=  "\n\n  <tr>\n    <th>&nbsp;</th>\n    <td colspan=\"3\">\n      <input type=\"submit\" id=\"commit\" value=\"Submit ";
#line 707 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  "\">\n      &nbsp;&nbsp;&nbsp;&nbsp;\n      <input type=\"submit\" name=\"maketemplate\" id=\"maketemplate\"\n             value=\"Remember values as bookmarkable template\"\n             class=\"expert_fields\">\n    </td>\n  </tr>\n</tbody>\n  </table>\n  <input type=\"hidden\" name=\"form_name\" value=\"enter_bug\">\n</form>\n\n";
#line 720 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'end' ]]);
    $output .=  "\n";
#line 722 "template/en/default/bug/create/create.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'build_userlist' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 747 "template/en/default/bug/create/create.html.tmpl"
        $stash->set('user_found', 0);
#line 748 "template/en/default/bug/create/create.html.tmpl"
        $stash->set('default_login', $stash->get(['default_user', 0, 'login', 0]));
#line 749 "template/en/default/bug/create/create.html.tmpl"
        if (!($stash->get('default_login'))) {
        $context->throw('return', '', \$output);
        }
        
        $output .=  "\n";
#line 756 "template/en/default/bug/create/create.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get('userlist');
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'user'} = $_tt_value;
#line 755 "template/en/default/bug/create/create.html.tmpl"
        if ($stash->get(['user', 0, 'login', 0]) eq $stash->get('default_login')) {
#line 753 "template/en/default/bug/create/create.html.tmpl"
        $stash->set('user_found', 1);
#line 754 "template/en/default/bug/create/create.html.tmpl"
        last FOR1;
        }
        ;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n";
#line 758 "template/en/default/bug/create/create.html.tmpl"
        if (!($stash->get('user_found'))) {
        $output .=  $stash->get(['userlist', 0, 'push', [ { 'login' => $stash->get('default_login'), 'identity' => $stash->get(['default_user', 0, 'identity', 0]), 'visible' => 1  } ]]);
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'select' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n";
#line 730 "template/en/default/bug/create/create.html.tmpl"
        $output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get('field'), 'editable' => 1 });
        $output .=  "\n  <td>\n    <select name=\"";
#line 734 "template/en/default/bug/create/create.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['field', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" \n            id=\"";
#line 735 "template/en/default/bug/create/create.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['field', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 741 "template/en/default/bug/create/create.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get($stash->get(['field', 0, 'name', 0]));
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'x'} = $_tt_value;
        $output .=  "\n      <option value=\"";
#line 737 "template/en/default/bug/create/create.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('x');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
#line 738 "template/en/default/bug/create/create.html.tmpl"
        if ($stash->get('x') eq $stash->get(['default', 0, $stash->get(['field', 0, 'name', 0]), 0])) {
        $output .=  ('' . " selected=\"selected\"");
        }
        
        $output .=  ">";
#line 739 "template/en/default/bug/create/create.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['display_value', [ $stash->get(['field', 0, 'name', 0]), $stash->get('x') ]]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n      </option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n    </select>\n  </td>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
