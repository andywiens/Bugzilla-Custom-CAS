use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1297790525',
        'name' => 'bug/comments.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 23 "template/en/default/bug/comments.html.tmpl"
    $output .=  $context->process('bug/time.html.tmpl');
    $output .=  "\n\n<script src=\"";
#line 25 "template/en/default/bug/comments.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('mtime')
                  || $context->throw($context->error);
    
    $output .=  'js/comments.js';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" type=\"text/javascript\">\n</script>\n";
#line 28 "template/en/default/bug/comments.html.tmpl"
    $stash->set('start_at', 0, 1);
    $stash->set('mode', 'show', 1);
#line 29 "template/en/default/bug/comments.html.tmpl"
    $stash->set('sort_order', $stash->get(['user', 0, 'settings', 0, 'comment_sort_order', 0, 'value', 0]));
    $output .=  "\n\n";
#line 36 "template/en/default/bug/comments.html.tmpl"
    if (($stash->get('start_at') > 0)) {
#line 35 "template/en/default/bug/comments.html.tmpl"
    $stash->set('sort_order', 'oldest_to_newest');
    }
    
    $output .=  "\n\n\n";
#line 53 "template/en/default/bug/comments.html.tmpl"
    if ($stash->get('sort_order') eq 'oldest_to_newest') {
#line 41 "template/en/default/bug/comments.html.tmpl"
    $stash->set('count', 0);
#line 42 "template/en/default/bug/comments.html.tmpl"
    $stash->set('description', 0);
#line 43 "template/en/default/bug/comments.html.tmpl"
    $stash->set('increment', 1);
    }
    else {
#line 45 "template/en/default/bug/comments.html.tmpl"
    $stash->set('increment', -1);
#line 52 "template/en/default/bug/comments.html.tmpl"
    if ($stash->get('sort_order') eq 'newest_to_oldest') {
#line 47 "template/en/default/bug/comments.html.tmpl"
    $stash->set('count', $stash->get(['comments', 0, 'size', 0]) - 1);
#line 48 "template/en/default/bug/comments.html.tmpl"
    $stash->set('description', 0);
    }
    elsif ($stash->get('sort_order') eq 'newest_to_oldest_desc_first') {
#line 50 "template/en/default/bug/comments.html.tmpl"
    $stash->set('count', $stash->get(['comments', 0, 'size', 0]));
#line 51 "template/en/default/bug/comments.html.tmpl"
    $stash->set('description', $stash->get(['comments', 0, 'size', 0]));
    }
    
    }
    
    $output .=  "\n\n<!-- This auto-sizes the comments and positions the collapse/expand links \n     to the right. -->\n<table class=\"bz_comment_table\" cellpadding=\"0\" cellspacing=\"0\"><tr>\n<td>\n";
#line 66 "template/en/default/bug/comments.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('comments');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'comment'} = $_tt_value;
#line 63 "template/en/default/bug/comments.html.tmpl"
    if ($stash->get('count') >= $stash->get('start_at')) {
#line 62 "template/en/default/bug/comments.html.tmpl"
    $output .=  $context->process('a_comment');
    }
    
    $output .=  "\n  ";
#line 65 "template/en/default/bug/comments.html.tmpl"
    $stash->set('count', $stash->get('count') + $stash->get('increment'));;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
#line 74 "template/en/default/bug/comments.html.tmpl"
    if ($stash->get(['user', 0, 'settings', 0, 'comment_box_position', 0, 'value', 0]) eq 'before_comments' && $stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n  <div class=\"bz_add_comment\">\n    <a href=\"#\" \n       onclick=\"return goto_add_comments();\">\n       Add Comment</a>\n  </div>";
    }
    
    $output .=  "\n\n";
    $output .=  "  ";
#line 79 "template/en/default/bug/comments.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'aftercomments' ]]);
    $output .=  "\n\n</td>\n<td>";
#line 95 "template/en/default/bug/comments.html.tmpl"
    if ($stash->get('mode') eq 'edit') {
    $output .=  "\n    <ul class=\"bz_collapse_expand_comments\">\n      <li><a href=\"#\" onclick=\"toggle_all_comments('collapse'); \n                               return false;\">Collapse All Comments</a></li>\n      <li><a href=\"#\" onclick=\"toggle_all_comments('expand');\n                               return false;\">Expand All Comments</a></li>";
#line 93 "template/en/default/bug/comments.html.tmpl"
    if ($stash->get(['user', 0, 'settings', 0, 'comment_box_position', 0, 'value', 0]) eq 'after_comments' && $stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n        <li class=\"bz_add_comment\"><a href=\"#\" \n            onclick=\"return goto_add_comments('bug_status_bottom');\">\n            Add Comment</a></li>";
    }
    
    $output .=  "                               \n    </ul>";
    }
    
    $output .=  "\n</td>\n</tr></table>\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'a_comment' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 104 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get(['comment', 0, 'is_private', 0]) && ! $stash->get(['user', 0, 'is_insider', 0])) {
        $context->throw('return', '', \$output);
        }
        
#line 105 "template/en/default/bug/comments.html.tmpl"
        $stash->set('comment_text', $stash->get(['comment', 0, 'body_full', [ { 'wrap' => 1  } ]]));
#line 106 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get('comment_text') eq '' && ($stash->get(['comment', 0, 'work_time', 0]) - 0) ne 0 && ! $stash->get(['user', 0, 'is_timetracker', 0])) {
        $context->throw('return', '', \$output);
        }
        
        $output .=  "\n\n    <div id=\"c";
#line 108 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get('count');
        $output .=  "\" class=\"bz_comment";
#line 108 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get(['comment', 0, 'is_private', 0])) {
        $output .=  ' bz_private';
        }
        
#line 109 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get(['marks', 0, $stash->get('count'), 0])) {
        $output .=  ' bz_comment_hilite';
        }
        
#line 110 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get('count') eq $stash->get('description')) {
        $output .=  ' bz_first_comment';
        }
        
        $output .=  "\">";
#line 117 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get('count') eq $stash->get('description')) {
#line 112 "template/en/default/bug/comments.html.tmpl"
        $stash->set('class_name', 'bz_first_comment_head');
#line 113 "template/en/default/bug/comments.html.tmpl"
        $stash->set('comment_label', 'Description');
        }
        else {
#line 115 "template/en/default/bug/comments.html.tmpl"
        $stash->set('class_name', 'bz_comment_head');
#line 116 "template/en/default/bug/comments.html.tmpl"
        $stash->set('comment_label', 'Comment '  . $stash->get('count'));
        }
        
        $output .=  "\n\n      <div class=\"";
#line 119 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('class_name');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">\n";
#line 128 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get('mode') eq 'edit') {
        $output .=  "\n          <span class=\"bz_comment_actions\">\n            <script type=\"text/javascript\"><!--\n              addReplyLink(";
#line 124 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get('count');
        $output .=  ", ";
#line 124 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get(['comment', 0, 'id', 0]);
        $output .=  ");\n              addCollapseLink(";
#line 125 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get('count');
        $output .=  "); // -->\n            </script>\n          </span>";
        }
        
        $output .=  "\n";
#line 141 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get('mode') eq 'edit' && $stash->get(['user', 0, 'is_insider', 0])) {
        $output .=  "\n          <div class=\"bz_private_checkbox\">\n            <input type=\"hidden\" value=\"1\"\n                   name=\"defined_isprivate_";
#line 133 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get(['comment', 0, 'id', 0]);
        $output .=  "\">\n            <input type=\"checkbox\"\n                   name=\"isprivate_";
#line 135 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get(['comment', 0, 'id', 0]);
        $output .=  "\" value=\"1\"\n                   id=\"isprivate_";
#line 136 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get(['comment', 0, 'id', 0]);
        $output .=  "\"\n                   onClick=\"updateCommentPrivacy(this, ";
#line 137 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get('count');
        $output .=  ")\"";
#line 138 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get(['comment', 0, 'is_private', 0])) {
        $output .=  ('' . " checked=\"checked\"");
        }
        
        $output .=  ">\n            <label for=\"isprivate_";
#line 139 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get(['comment', 0, 'id', 0]);
        $output .=  "\">Private</label>\n          </div>";
        }
        
        $output .=  "\n\n        <span class=\"bz_comment_number\">\n          <a \n             href=\"show_bug.cgi?id=";
#line 145 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        $output .=  "#c";
#line 145 "template/en/default/bug/comments.html.tmpl"
        $output .=  $stash->get('count');
        $output .=  "\">";
#line 146 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('comment_label');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n        </span>\n\n        <span class=\"bz_comment_user\">";
#line 150 "template/en/default/bug/comments.html.tmpl"
        $output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['comment', 0, 'author', 0]) });
        $output .=  "\n        </span>\n\n        <span class=\"bz_comment_user_images\">";
#line 159 "template/en/default/bug/comments.html.tmpl"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['comment', 0, 'author', 0, 'direct_group_membership', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        FOR1:   while (! $_tt_error) {
                    $stash->{'group'} = $_tt_value;
#line 155 "template/en/default/bug/comments.html.tmpl"
        if (!($stash->get(['group', 0, 'icon_url', 0]))) {
        ($_tt_value, $_tt_error) = $_tt_list->get_next();
        next FOR1;
        
        }
        
        $output .=  "\n            <img src=\"";
#line 156 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['group', 0, 'icon_url', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"\n                 alt=\"";
#line 157 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['group', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"\n                 title=\"";
#line 158 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['group', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  " - ";
#line 158 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['group', 0, 'description', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n        </span>\n\n        <span class=\"bz_comment_time\">\n          ";
#line 163 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('time')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['comment', 0, 'creation_ts', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n        </span>\n      </div>\n";
#line 172 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get(['user', 0, 'is_timetracker', 0]) && ($stash->get(['comment', 0, 'work_time', 0]) > 0 || $stash->get(['comment', 0, 'work_time', 0]) < 0)) {
        $output .=  "\n         <br>\n         Additional hours worked: ";
#line 171 "template/en/default/bug/comments.html.tmpl"
        $output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['comment', 0, 'work_time', 0]) });
        }
        
        $output .=  "\n\n";
        $output .=  "\n<pre class=\"bz_comment_text\" ";
#line 178 "template/en/default/bug/comments.html.tmpl"
        if ($stash->get('mode') eq 'edit') {
        $output .=  ' id="comment_text_'  . $stash->get('count')  . '"';
        }
        
        $output .=  ">";
#line 179 "template/en/default/bug/comments.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('quoteUrls', [ $stash->get('bug'), $stash->get('comment') ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('comment_text');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</pre>\n    </div>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
