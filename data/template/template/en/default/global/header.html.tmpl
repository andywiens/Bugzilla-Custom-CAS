use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1297790525',
        'name' => 'global/header.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
    $output .=  "\n";
#line 42 "template/en/default/global/header.html.tmpl"
    if ($stash->get('message')) {
#line 41 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('global/messages.html.tmpl');
    }
    
    $output .=  "\n";
#line 44 "template/en/default/global/header.html.tmpl"
    $stash->set('subheader', '', 1);
    $stash->set('header_addl_info', '', 1);
    $stash->set('onload', '', 1);
    $stash->set('style_urls', [ ], 1);
    $stash->set('yui', [ ], 1);
    $output .=  "\n";
#line 52 "template/en/default/global/header.html.tmpl"
    $stash->set('yui_css', { 'autocomplete' => 1, 'calendar' => 1, 'datatable' => 1  });
    $output .=  "\n\n";
#line 62 "template/en/default/global/header.html.tmpl"
    $stash->set('yui_deps', { 'autocomplete' => [ 'json', 'connection', 'datasource' ], 'datatable' => [ 'json', 'connection', 'datasource', 'element' ]  });
    $output .=  "\n\n";
#line 70 "template/en/default/global/header.html.tmpl"
    $stash->set('yui_templates', { 'datatable' => [ 'global/value-descs.js.tmpl' ]  });
    $output .=  "\n\n";
#line 77 "template/en/default/global/header.html.tmpl"
    $stash->set('starting_js_urls', [ 'js/yui/yahoo-dom-event/yahoo-dom-event.js', 'js/yui/cookie/cookie-min.js' ]);
    $output .=  "\n\n\n";
#line 90 "template/en/default/global/header.html.tmpl"
    if (! $stash->get(['header', 0, 'defined', 0])) {
#line 90 "template/en/default/global/header.html.tmpl"
    $stash->set('header', $stash->get('title'));
    }
    
    $output .=  "\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n                      \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>";
#line 96 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'start' ]]);
    $output .=  "\n    <title>";
#line 97 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get('title');
    $output .=  "</title>\n\n";
    $output .=  "\n";
#line 101 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('global/site-navigation.html.tmpl');
    $output .=  "\n";
#line 103 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('global/setting-descs.none.tmpl');
    $output .=  "\n";
#line 105 "template/en/default/global/header.html.tmpl"
    $stash->set('yui', $stash->get(['yui_resolve_deps', [ $stash->get('yui'), $stash->get('yui_deps') ]]));
#line 106 "template/en/default/global/header.html.tmpl"
    $stash->set('css_sets', $stash->get(['css_files', [ $stash->get('style_urls'), $stash->get('yui'), $stash->get('yui_css') ]]));
    $output .=  "\n\n    ";
    $output .=  "\n    ";
    $output .=  "\n    <link href=\"";
#line 114 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('mtime')
                  || $context->throw($context->error);
    
    $output .=  'skins/standard/global.css';
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n          rel=\"alternate stylesheet\" \n          title=\"";
#line 116 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['setting_descs', 0, 'standard', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 119 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['css_sets', 0, 'standard', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'style_url'} = $_tt_value;
#line 118 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('format_css_link', { 'css_set_name' => 'standard' });;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n    ";
#line 127 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['css_sets', 0, 'skin', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'style_url'} = $_tt_value;
#line 126 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('format_css_link', { 'css_set_name' => $stash->get(['user', 0, 'settings', 0, 'skin', 0, 'value', 0]) });;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n";
#line 133 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['css_sets', 0, 'alternate', 0, 'keys', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'alternate_skin'} = $_tt_value;
#line 132 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['css_sets', 0, 'alternate', 0, $stash->get('alternate_skin'), 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'style_url'} = $_tt_value;
#line 131 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('format_css_link', { 'css_set_name' => $stash->get('alternate_skin') });;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n    ";
#line 141 "template/en/default/global/header.html.tmpl"
    if ($stash->get('style')) {
    $output .=  "\n      <style type=\"text/css\">";
#line 139 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get('style');
    $output .=  "\n      </style>";
    }
    
    $output .=  "\n\n    ";
#line 149 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['css_sets', 0, 'custom', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'style_url'} = $_tt_value;
#line 148 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('format_css_link', { 'css_set_name' => 'standard' });;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n    ";
#line 154 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('yui');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'yui_name'} = $_tt_value;
#line 1 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['starting_js_urls', 0, 'push', [ ("js/yui/" . $stash->get('yui_name') . "/" . $stash->get('yui_name') . "-min.js") ]]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 155 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['starting_js_urls', 0, 'push', [ 'js/global.js' ]]);
    $output .=  "\n";
#line 159 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('starting_js_urls');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'javascript_url'} = $_tt_value;
#line 158 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('format_js_link');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n    <script type=\"text/javascript\">\n    <!--\n        YAHOO.namespace('bugzilla');\n        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {\n               if ( (\"onpagehide\" in window || YAHOO.env.ua.gecko) && sType === \"unload\") { sType = \"pagehide\"; };\n               var capture = ((sType == \"focusin\" || sType == \"focusout\") && !YAHOO.env.ua.ie) ? true : false;\n               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);\n         };\n        if ( \"onpagehide\" in window || YAHOO.env.ua.gecko) {\n            YAHOO.util.Event._simpleRemove(window, \"unload\", \n                                           YAHOO.util.Event._unload);\n        }\n        ";
    $output .=  "\n        function unhide_language_selector() { \n            YAHOO.util.Dom.removeClass(\n                'lang_links_container', 'bz_default_hidden'\n            ); \n        } \n        YAHOO.util.Event.onDOMReady(unhide_language_selector);\n\n        ";
    $output .=  "\n        var BUGZILLA = {\n            param: {\n                cookiepath: '";
#line 191 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'cookiepath' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n                maxusermatches: ";
#line 192 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'maxusermatches' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n            },\n\n            string: {\n                ";
    $output .=  "\n\n                attach_desc_required:\n                    'You must enter a Description for this attachment.',\n                component_required:\n                    'You must select a Component for this ";
#line 201 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".',\n                description_required:\n                    'You must enter a Description for this ";
#line 203 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".',\n                short_desc_required:\n                    'You must enter a Summary for this ";
#line 205 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".',\n                version_required:\n                    'You must select a Version for this ";
#line 207 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".'\n            }\n        };\n";
#line 215 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('yui');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'yui_name'} = $_tt_value;
#line 214 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['yui_templates', 0, $stash->get('yui_name'), 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'yui_template'} = $_tt_value;
#line 213 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process($stash->get('yui_template'));;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 218 "template/en/default/global/header.html.tmpl"
    if ($stash->get('javascript')) {
#line 217 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get('javascript');
    }
    
    $output .=  "\n    // -->\n    </script>\n";
#line 224 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('javascript_urls');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'javascript_url'} = $_tt_value;
#line 223 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('format_js_link');;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n    ";
#line 231 "template/en/default/global/header.html.tmpl"
    if ($stash->get('atomlink')) {
    $output .=  "\n       <link rel=\"alternate\" \n             type=\"application/atom+xml\" title=\"Atom feed\" \n             href=\"";
#line 230 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('atomlink');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
    }
    
    $output .=  "\n\n    ";
    $output .=  "\n    <link rel=\"search\" type=\"application/opensearchdescription+xml\"\n                       title=\"";
#line 235 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  "\" href=\"./search_plugin.cgi\">\n    <link rel=\"shortcut icon\" href=\"images/favicon.ico\" >";
#line 237 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['Hook', 0, 'process', [ 'additional_header' ]]);
    $output .=  "\n  </head>\n\n";
    $output .=  "\n\n  <body onload=\"";
#line 244 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get('onload');
    $output .=  "\"\n        class=\"";
#line 245 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['urlbase', 0, 'replace', [ '^https?://', '' ], 'replace', [ '/$', '' ], 'replace', [ '[-~@:/.]+', '-' ]]);
#line 248 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('bodyclasses');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'class'} = $_tt_value;
#line 247 "template/en/default/global/header.html.tmpl"
    $output .=  ' ';
#line 247 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('css_class_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('class');
        
        &$_tt_filter($output);
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  " yui-skin-sam\">\n\n";
    $output .=  "\n\n<div id=\"header\">\n";
#line 256 "template/en/default/global/header.html.tmpl"
    $output .=  $context->include('global/banner.html.tmpl');
    $output .=  "\n\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\" id=\"titles\">\n<tr>\n    <td id=\"title\">\n      <p>";
#line 261 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
#line 1 "template/en/default/global/header.html.tmpl"
    if ($stash->get('header')) {
    $output .=  (" &ndash; " . $stash->get('header'));
    }
    
    $output .=  "</p>\n    </td>\n";
#line 269 "template/en/default/global/header.html.tmpl"
    if ($stash->get('subheader')) {
    $output .=  "\n    <td id=\"subtitle\">\n      <p class=\"subheader\">";
#line 267 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get('subheader');
    $output .=  "</p>\n    </td>";
    }
    
    $output .=  "\n";
#line 275 "template/en/default/global/header.html.tmpl"
    if ($stash->get('header_addl_info')) {
    $output .=  "\n    <td id=\"information\">\n      <p class=\"header_addl_info\">";
#line 273 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get('header_addl_info');
    $output .=  "</p>\n    </td>";
    }
    
    $output .=  "\n</tr>\n</table>\n\n<table id=\"lang_links_container\" cellpadding=\"0\" cellspacing=\"0\"\n       class=\"bz_default_hidden\"><tr><td>";
#line 294 "template/en/default/global/header.html.tmpl"
    if ($stash->get(['Bugzilla', 0, 'languages', 0, 'size', 0]) > 1) {
    $output .=  "\n  <ul class=\"links\">";
#line 292 "template/en/default/global/header.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['Bugzilla', 0, 'languages', 0, 'sort', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'lang'} = $_tt_value;
    $output .=  "\n    <li>";
#line 284 "template/en/default/global/header.html.tmpl"
    if (! $stash->get(['loop', 0, 'first', 0])) {
    $output .=  "<span class=\"separator\"> | </span>";
    }
    
#line 290 "template/en/default/global/header.html.tmpl"
    if ($stash->get('lang') eq $stash->get('current_language')) {
    $output .=  "\n      <span class=\"lang_current\">";
#line 286 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('upper')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('lang');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</span>";
    }
    else {
    $output .=  "\n      <a href=\"#\" onclick=\"set_language('";
#line 288 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('lang');
        
        &$_tt_filter($output);
    };
    
    $output .=  "');\">";
#line 289 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('upper')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('lang');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>";
    }
    
    $output .=  "\n    </li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  </ul>";
    }
    
    $output .=  "\n</td></tr></table>\n";
#line 297 "template/en/default/global/header.html.tmpl"
    $output .=  $context->process('global/common-links.html.tmpl', { 'qs_suffix' => '_top' });
    $output .=  "\n</div> ";
    $output .=  "\n\n<div id=\"bugzilla-body\">\n";
#line 304 "template/en/default/global/header.html.tmpl"
    if ($stash->get(['Param', [ 'announcehtml' ]])) {
#line 303 "template/en/default/global/header.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'announcehtml' ]]);
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "\n";
#line 308 "template/en/default/global/header.html.tmpl"
    if ($stash->get('message')) {
    $output .=  "\n<div id=\"message\">";
#line 307 "template/en/default/global/header.html.tmpl"
    $output .=  $stash->get('message');
    $output .=  "</div>";
    }
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'format_css_link' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 317 "template/en/default/global/header.html.tmpl"
        if ($stash->get(['style_url', 0, 'match', [ '/IE-fixes\.css' ]])) {
        $output .=  "\n    <!--[if lte IE 7]>\n      ";
        }
        
        $output .=  "\n";
#line 328 "template/en/default/global/header.html.tmpl"
        if ($stash->get('css_set_name') eq 'standard' || $stash->get('css_set_name') eq $stash->get(['user', 0, 'settings', 0, 'skin', 0, 'value', 0])) {
#line 322 "template/en/default/global/header.html.tmpl"
        $stash->set('css_rel', 'stylesheet');
#line 323 "template/en/default/global/header.html.tmpl"
        $stash->set('css_set_display_name', $stash->get(['setting_descs', 0, $stash->get(['user', 0, 'settings', 0, 'skin', 0, 'value', 0]), 0]) || $stash->get(['user', 0, 'settings', 0, 'skin', 0, 'value', 0]));
        }
        else {
#line 326 "template/en/default/global/header.html.tmpl"
        $stash->set('css_rel', 'alternate stylesheet');
#line 327 "template/en/default/global/header.html.tmpl"
        $stash->set('css_set_display_name', $stash->get(['setting_descs', 0, $stash->get('css_set_name'), 0]) || $stash->get('css_set_name'));
        }
        
        $output .=  "\n";
#line 336 "template/en/default/global/header.html.tmpl"
        if ($stash->get('css_set_name') eq 'standard') {
#line 331 "template/en/default/global/header.html.tmpl"
        $stash->set('css_title_link', '');
        }
        else {
#line 335 "template/en/default/global/header.html.tmpl"
        
        # CAPTURE
        $stash->set('css_title_link', do {
            my $output = '';
        $output .=  "title=\"";
#line 334 "template/en/default/global/header.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('css_set_display_name');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
            $output;
        });
        
        }
        
        $output .=  "\n\n  <link href=\"";
#line 338 "template/en/default/global/header.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('style_url');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" rel=\"";
#line 338 "template/en/default/global/header.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('css_rel');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"\n        type=\"text/css\" ";
#line 339 "template/en/default/global/header.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('none')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('css_title_link');
            
            &$_tt_filter($output);
        };
        
        $output .=  ">\n";
#line 341 "template/en/default/global/header.html.tmpl"
        if ($stash->get(['style_url', 0, 'match', [ '/IE-fixes\.css' ]])) {
        $output .=  '<![endif]-->';
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'format_js_link' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <script type=\"text/javascript\" src=\"";
#line 345 "template/en/default/global/header.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('mtime')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('javascript_url');
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"></script>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
