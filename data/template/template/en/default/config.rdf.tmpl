use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1297790525',
        'name' => 'config.rdf.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n\n";
#line 25 "template/en/default/config.rdf.tmpl"
    
    # CAPTURE
    $stash->set('escaped_urlbase', do {
        my $output = '';
#line 25 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('xml')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('urlbase');
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n<?xml version=\"1.0\"";
#line 26 "template/en/default/config.rdf.tmpl"
    if ($stash->get(['Param', [ 'utf8' ]])) {
    $output .=  " encoding=\"UTF-8\"";
    }
    
    $output .=  "?>\n<!-- Note: this interface is experimental and under development.\n   - We may and probably will make breaking changes to it in the future. -->\n\n<RDF xmlns=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n     xmlns:bz=\"http://www.bugzilla.org/rdf#\">\n\n<bz:installation rdf:about=\"";
#line 34 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "\">\n  <bz:install_version>";
#line 35 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  '4.0';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:install_version>\n  <bz:maintainer>";
#line 36 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:maintainer>\n\n  <bz:status>\n    <Seq>";
#line 42 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('status');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 41 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:status>\n\n  <bz:status_open>\n    <Seq>";
#line 50 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('open_status');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 49 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:status_open>\n\n  <bz:status_closed>\n    <Seq>";
#line 58 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('closed_status');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 57 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:status_closed>\n\n  <bz:resolution>\n    <Seq>";
#line 66 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('resolution');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 65 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:resolution>\n\n  <bz:keyword>\n    <Seq>";
#line 74 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('keyword');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 73 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:keyword>\n\n  <bz:platform>\n    <Seq>";
#line 82 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('platform');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 81 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:platform>\n\n  <bz:op_sys>\n    <Seq>";
#line 90 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('op_sys');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 89 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:op_sys>\n\n  <bz:priority>\n    <Seq>";
#line 98 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('priority');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 97 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:priority>\n\n  <bz:severity>\n    <Seq>";
#line 106 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('severity');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 105 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:severity>\n";
#line 119 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('custom_fields');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'cf'} = $_tt_value;
    $output .=  "\n  <bz:";
#line 111 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['cf', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ">\n    <Seq>";
#line 115 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['cf', 0, 'legal_values', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>";
#line 114 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:";
#line 117 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['cf', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ">\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  <bz:products>\n    <Seq>";
#line 158 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('products');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'product'} = $_tt_value;
    $output .=  "\n        <li>\n          <bz:product rdf:about=\"";
#line 125 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "product.cgi?name=";
#line 125 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n            <bz:name>";
#line 126 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:name>\n            <bz:allows_unconfirmed>";
#line 127 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'allows_unconfirmed', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:allows_unconfirmed>\n\n            <bz:components>\n              <Seq>";
#line 134 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'components', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'component'} = $_tt_value;
    $output .=  "\n                  <li resource=\"";
#line 132 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "component.cgi?name=";
#line 132 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['component', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;product=";
#line 133 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"/>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n              </Seq>\n            </bz:components>\n\n            <bz:versions>\n              <Seq>";
#line 142 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'versions', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'version'} = $_tt_value;
    $output .=  "\n                  <li resource=\"";
#line 141 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "version.cgi?name=";
#line 141 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['version', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"/>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n              </Seq>\n            </bz:versions>\n";
#line 154 "template/en/default/config.rdf.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]])) {
    $output .=  "\n              <bz:target_milestones>\n                <Seq>";
#line 151 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'milestones', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'milestone'} = $_tt_value;
    $output .=  "\n                    <li resource=\"";
#line 150 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "milestone.cgi?name=";
#line 150 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['milestone', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"/>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n                </Seq>\n              </bz:target_milestones>";
    }
    
    $output .=  "\n\n          </bz:product>\n        </li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:products>\n";
#line 162 "template/en/default/config.rdf.tmpl"
    $stash->set('all_visible_flag_types', {   });
    $output .=  "\n  <bz:components>\n    <Seq>";
#line 187 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('products');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'product'} = $_tt_value;
#line 186 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'components', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'component'} = $_tt_value;
    $output .=  "\n          <li>\n            <bz:component rdf:about=\"";
#line 168 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "component.cgi?name=";
#line 168 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['component', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;product=";
#line 169 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['product', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n              <bz:name>";
#line 170 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['component', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:name>";
#line 183 "template/en/default/config.rdf.tmpl"
    if ($stash->get('show_flags')) {
    $output .=  "\n                <bz:flag_types>\n                  <Seq>";
#line 174 "template/en/default/config.rdf.tmpl"
    $stash->set('flag_types', $stash->get(['component', 0, 'flag_types', 0, 'bug', 0, 'merge', [ $stash->get(['component', 0, 'flag_types', 0, 'attachment', 0]) ]]));
#line 180 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR3:   while (! $_tt_error) {
                $stash->{'flag_type'} = $_tt_value;
#line 176 "template/en/default/config.rdf.tmpl"
    if (!($stash->get(['flag_type', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR3;
    
    }
    
#line 177 "template/en/default/config.rdf.tmpl"
    $stash->set(['all_visible_flag_types', 0, $stash->get(['flag_type', 0, 'id', 0]), 0], $stash->get('flag_type'));
    $output .=  "\n                      <li resource=\"";
#line 178 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "flag.cgi?id=";
#line 178 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;name=";
#line 179 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" />";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n                  </Seq>\n                </bz:flag_types>";
    }
    
    $output .=  "\n            </bz:component>\n          </li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:components>\n\n  <bz:versions>\n    <Seq>";
#line 201 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('products');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'product'} = $_tt_value;
#line 200 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'versions', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'version'} = $_tt_value;
    $output .=  "\n          <li>\n            <bz:version rdf:about=\"";
#line 196 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "version.cgi?name=";
#line 196 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['version', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n              <bz:name>";
#line 197 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['version', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:name>\n            </bz:version>\n          </li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:versions>\n";
#line 219 "template/en/default/config.rdf.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]])) {
    $output .=  "\n    <bz:target_milestones>\n      <Seq>";
#line 216 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('products');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'product'} = $_tt_value;
#line 215 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['product', 0, 'milestones', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'milestone'} = $_tt_value;
    $output .=  "\n            <li>\n              <bz:target_milestone rdf:about=\"";
#line 211 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "milestone.cgi?name=";
#line 211 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['milestone', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n                <bz:name>";
#line 212 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['milestone', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:name>\n              </bz:target_milestone>\n            </li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </Seq>\n    </bz:target_milestones>";
    }
    
    $output .=  "\n";
#line 244 "template/en/default/config.rdf.tmpl"
    if ($stash->get('show_flags')) {
    $output .=  "\n    <bz:flag_types>\n      <Seq>";
#line 241 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['all_visible_flag_types', 0, 'values', 0, 'sort', [ 'name' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'flag_type'} = $_tt_value;
    $output .=  "\n          <li>\n            <bz:flag_type rdf:about=\"";
#line 226 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "flag.cgi?id=";
#line 226 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "&amp;name=";
#line 227 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n              <bz:id>";
#line 228 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:id>\n              <bz:name>";
#line 229 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:name>\n              <bz:description>";
#line 230 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:description>\n              <bz:type>";
#line 231 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'target_type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:type>\n              <bz:requestable>";
#line 232 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'is_requestable', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:requestable>\n              <bz:specifically_requestable>";
#line 233 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'is_requesteeble', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:specifically_requestable>\n              <bz:multiplicable>";
#line 234 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'is_multiplicable', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:multiplicable>";
#line 238 "template/en/default/config.rdf.tmpl"
    if ($stash->get(['user', 0, 'in_group', [ 'editcomponents' ]])) {
    $output .=  "\n                <bz:grant_group>";
#line 236 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'grant_group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:grant_group>\n                <bz:request_group>";
#line 237 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'request_group', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:request_group>";
    }
    
    $output .=  "\n            </bz:flag_type>\n          </li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n      </Seq>\n    </bz:flag_types>";
    }
    
    $output .=  "\n\n  <bz:fields>\n    <Seq>";
#line 248 "template/en/default/config.rdf.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
#line 262 "template/en/default/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('field');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n        <li>\n          <bz:field rdf:about=\"";
#line 251 "template/en/default/config.rdf.tmpl"
    $output .=  $stash->get('escaped_urlbase');
    $output .=  "field.cgi?name=";
#line 251 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n            <bz:name>";
#line 252 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:name>\n            <bz:description>";
#line 253 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['field_descs', 0, $stash->get(['item', 0, 'name', 0]), 0]) || $stash->get(['item', 0, 'description', 0]));
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:description>";
    
#line 259 "template/en/default/config.rdf.tmpl"
    if ($stash->get(['item', 0, 'custom', 0])) {
    $output .=  "\n              <bz:type>";
#line 256 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'type', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:type>\n              <bz:type_desc>";
#line 257 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_types', 0, $stash->get(['item', 0, 'type', 0]), 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:type_desc>\n              <bz:enter_bug>";
#line 258 "template/en/default/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'enter_bug', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</bz:enter_bug>";
    }
    
    $output .=  "\n          </bz:field>\n        </li>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:fields>\n</bz:installation>\n\n</RDF>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
